{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStackCourse\\\\Bootcamp\\\\React\\\\00-react-project\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Spinner from './Components/Spinner.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isLoading: false,\n      isOpen: true\n    };\n\n    this.handleTimer = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    setTimeout(() => {\n      this.setState({\n        isLoading: false\n      });\n    }, 2000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 20\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/FullStackCourse/Bootcamp/React/00-react-project/src/App.js"],"names":["React","Spinner","App","Component","state","isLoading","isOpen","handleTimer","setState","componentDidMount","setTimeout","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;AAEI,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE7BC,KAF6B,GAEvB;AAACC,MAAAA,SAAS,EAAC,KAAX;AAAkBC,MAAAA,MAAM,EAAE;AAA1B,KAFuB;;AAAA,SAW3BC,WAX2B,GAWb,MAAM;AAClB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KAb0B;AAAA;;AAI7BG,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,QAAL,CAAc;AAAEH,MAAAA,SAAS,EAAE;AAAb,KAAd;AACAK,IAAAA,UAAU,CAAC,MAAM;AACf,WAAKF,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAFS,EAEP,IAFO,CAAV;AAGD;;AAKHM,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAhB4B;;AAkBjC,eAAeT,GAAf","sourcesContent":["import React from 'react';\r\nimport './App.css'\r\nimport Spinner from './Components/Spinner.js'\r\n\r\n    class App extends React.Component{\r\n\r\n        state={isLoading:false, isOpen: true};\r\n\r\n        componentDidMount() {\r\n            this.setState({ isLoading: true });\r\n            setTimeout(() => {\r\n              this.setState({ isLoading: false });\r\n            }, 2000);\r\n          }\r\n\r\n          handleTimer = () => {\r\n            this.setState({ isOpen: false });\r\n          };\r\n        render(){\r\n            return <div> Hi</div>\r\n        }\r\n    }\r\n    export default App;\r\n"]},"metadata":{},"sourceType":"module"}